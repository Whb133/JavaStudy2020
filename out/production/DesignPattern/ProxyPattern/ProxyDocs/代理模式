代理模式
一.代理设计模式原理:.
    使用一个代理将对象包装起来,然后用该代理对象取代原始对象。任何对原始对象的调用都要通过代理。
    代理对象决定是否以及何时将方法调用转到原始对象上。

    静态代理，特征是代理类和目标对象的类都是在编译期间确定下来，不利于程序的扩展。同时，每一个代理类只能为一个接口服务，
    这样一来程序开发中必然产生过多的代理。最好可以通过一个代理类完成全部的代理功能。
    动态代理是指客户通过代理类来调用其它对象的方法，并且是在程序运行时根据需要动态创建目标类的代理对象。
        动态代理使用场合:
            ➢调试
            ➢远程方法调用
    动态代理相比于静态代理的优点:
        抽象角色中(接口)声明的所有方法都被转移到调用处理器一个集中的方法中处理，这样，我们可以更加灵活和统一的处理众多的方法。

二.动态代理与AOP (Aspect Orient Programming)
    前面介绍的Proxy和InvocationHandler,很难看出这种动态代理的优势，下面介绍一种更实用的动态代理机制。
